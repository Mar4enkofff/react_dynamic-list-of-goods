{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","concat","name","id","getAll","fetch","then","response","json","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","_useState4","error","setError","haveError","message","_jsxs","className","type","onClick","catch","_toConsumableArray","sort","good1","good2","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"8NAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CAAEC,MAAM,GAADC,OAAKH,EAAKE,QAAUJ,SAEjCE,EAAKI,MAJDJ,EAAKK,GAKP,KAEJ,E,OCbA,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACrC,CAEO,ICJMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvChB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA0BJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAY,SAACC,GACjBF,EAASE,EACX,EAoBA,OACEC,eAAA,OAAKC,UAAU,MAAK1B,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACE4B,KAAK,SACL,UAAQ,aACRC,QAzBU,WACdpB,IACGE,KAAKQ,GACLW,OAAM,kBAAMN,EAAU,0BAA0B,GACrD,EAqBuBvB,SAClB,mBAIDD,cAAA,UACE4B,KAAK,SACL,UAAQ,oBACRC,QA3BgB,WDTfpB,IACJE,MAAK,SAAAZ,GAAK,OAAIgC,YAAIhC,GAChBiC,MAAK,SAACC,EAAOC,GAAK,OAAKD,EAAM1B,KAAK4B,cAAcD,EAAM3B,KAAK,IAC3D6B,MAAM,EAAG,EAAE,ICQXzB,KAAKQ,GACLW,OAAM,kBAAMN,EAAU,iCAAiC,GAC5D,EAuB6BvB,SACxB,uBAIDD,cAAA,UACE4B,KAAK,SACL,UAAQ,aACRC,QA7BU,WDRTpB,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EAAMsC,QAAO,SAAAlC,GAAI,MAAmB,QAAfA,EAAKE,KAAe,GAAC,ICStDM,KAAKQ,GACLW,OAAM,kBAAMN,EAAU,8BAA8B,GACzD,EAyBuBvB,SAClB,mBAICqB,EAEEtB,cAAA,KAAAC,SAAIqB,IADHtB,cAACH,EAAS,CAACE,MAAOA,MAI7B,EC9DAuC,IAASC,OACPvC,cAACc,EAAG,IACJ0B,SAASC,eAAe,Q","file":"static/js/main.a34775ca.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => [...goods]\n      .sort((good1, good2) => good1.name.localeCompare(good2.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [error, setError] = useState('');\n\n  const haveError = (message: string) => {\n    setError(message);\n  };\n\n  const showAll = () => {\n    getAll()\n      .then(setGoods)\n      .catch(() => haveError('Error loading all goods'));\n  };\n\n  const showFiveFirst = () => {\n    get5First()\n      .then(setGoods)\n      .catch(() => haveError('Error loading first five goods'));\n  };\n\n  const showRed = () => {\n    getRedGoods()\n      .then(setGoods)\n      .catch(() => haveError('Error loading all red goods'));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={showAll}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={showFiveFirst}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={showRed}\n      >\n        Load red goods\n      </button>\n\n      {!error\n        ? (<GoodsList goods={goods} />)\n        : <p>{error}</p>}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}